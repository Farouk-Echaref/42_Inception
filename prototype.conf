#testing

 #Serving Static Content: (HTML Files, CSS Files, Images ...)
 #Mime Types
 #Location Block/Context
 #redirecting and rewrites

 #define an event context for nginx
 events { }

 #since we are dealing with http responses we need http context
 http {

     #store logs
     access_log /var/log/nginx/access.log;

     #serving different types of content (Content-Type): Approach One:
     type {
        text/css    css;
        text/html   html;
     }
     #Approach two: Mime.types has all the possible content, 
     #so instead of defining it manually, you can include the file
     include mime.types;

     
     #define server context
     server {

        #define which port to listen to
        listen 8080;
         
        #file path to contain  the files that we want to serve when wo go to the specific port
        # access this with : localhost:8080
        root /Users/fech-cha/Desktop/42_Inception; #look for the index.html(supposing index.html is inside the 42_inception)

        #serving different content on a different path : access this with localhost:8080/Folder
        #appends /Folder at the end of the root path
        location /Folder {
            root /Users/fech-cha/Desktop/42_Inception;
        }

        #making alias to show same page as in Folder
        #example: localhost:8080/Folder2 should show the ame as localhost:8080/Folder
        location /Folder2{
            alias /Users/fech-cha/Desktop/42_Inception/Folder;
        }

        #by default the webserve looks for index.html, in case you want to try a diffrent file:
        location /Folder3 {
            root /Users/fech-cha/Desktop/42_Inception;

            #it looks for the specified file, if not found, serve the index in the root, if not found throw 404 Error
            try_files /Folder3/fold.html /index.html = 404;
        }

        #come back to this
        rewrite ^/number/(\w+) /count/$1

        #use regex (regular expressions)
        #matches any (case-insensitive) request in the next location block that contains a number between 0 to 9
        #example: localhost:8080/count/4 , or localhost:8080/count/2 , etc .. will redirect to the index localhost:8080
        location ~* /count/[0-9] {
            root /Users/fech-cha/Desktop/42_Inception;
            try_files /index.html = 404;
        }

        #redirecting to another path
        #example if i searched localhost:8080/FolderX, i get localhost:8080/Folder
        location /FolderX {
            return 307 /Folder; (307 is a HTTP Code for Redirection)
        }

         
     }
 }

 Hierarchy of A Project to serve with Nginx:

42_inception
|__ Folder
|   |__ index.html
|__ Folder3
|   |__ fold.html
|__ index.html
|__ styles.css
